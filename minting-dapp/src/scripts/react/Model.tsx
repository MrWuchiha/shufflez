/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'


type ActionName = 'BookAction' | 'DetailsAction' | 'DetailsAction2' | 'ArmatureAction' | 'ArmatureAction2'
type GLTFActions = Record<ActionName, THREE.AnimationAction>
type GLTFResult = GLTF & {
  nodes: {
    strip004: THREE.SkinnedMesh
    book002_mergedObject005: THREE.SkinnedMesh
    book002_mergedObject003: THREE.Mesh
    details_mergedObject001: THREE.Mesh
    lights_mergedObject002: THREE.Mesh
    Bone: THREE.Bone
    Bone_1: THREE.Bone
  }
  materials: {
    ['book.002']: THREE.MeshStandardMaterial
    ['book.001']: THREE.MeshStandardMaterial
    ['details.001']: THREE.MeshStandardMaterial
    ['lights.001']: THREE.MeshStandardMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF('/build/images/tarot-book.glb') as GLTFResult
  const { actions } = useAnimations(animations, group);

  useEffect(() => {
    actions.BookAction!.play();
    actions.DetailsAction!.play();
    actions.DetailsAction2!.play();
    actions.ArmatureAction!.play();
    actions.ArmatureAction2!.play();
  })

  return (
    //@ts-ignore: Unreachable code error
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="strip002" position={[-0.09, 0.29, 0.56]} rotation={[1.86, -Math.PI / 2, 0]} scale={0.05}>
          <primitive object={nodes.Bone} />
          <skinnedMesh name="strip004" geometry={nodes.strip004.geometry} material={materials['book.002']} skeleton={nodes.strip004.skeleton} />
        </group>
        <group name="strip003" position={[0, 0.25, 0.55]} rotation={[0.17, -1.56, -1.23]} scale={0.02}>
          <primitive object={nodes.Bone_1} />
          <skinnedMesh name="book002_mergedObject005" geometry={nodes.book002_mergedObject005.geometry} material={materials['book.002']} skeleton={nodes.book002_mergedObject005.skeleton} />
        </group>
        <mesh name="book002_mergedObject003" geometry={nodes.book002_mergedObject003.geometry} material={materials['book.001']} position={[0, 0.3, 0]} rotation={[Math.PI / 2, 0, Math.PI / 2]} />
        <mesh name="details_mergedObject001" geometry={nodes.details_mergedObject001.geometry} material={materials['details.001']} position={[0.07, 0.3, 0.1]} rotation={[Math.PI / 2, 0, Math.PI / 2]} />
        <mesh name="lights_mergedObject002" geometry={nodes.lights_mergedObject002.geometry} material={materials['lights.001']} position={[-0.33, 0.3, 0.05]} rotation={[Math.PI / 2, 0, Math.PI / 2]} />
      </group>
    </group>
  )
}

useGLTF.preload('/build/images/tarot-book.glb');
