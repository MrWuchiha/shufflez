/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useFrame } from '@react-three/fiber';


const planeMaterial = new THREE.MeshStandardMaterial({
  color: 0xffffff, 
  transparent: false, opacity: 0.8, wireframe: true,
});

type GLTFResult = GLTF & {
  nodes: {
    Plane: THREE.Mesh
  }
  materials: {}
}

export function Card(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/build/images/tarot-card.glb') as GLTFResult

  useFrame(({ clock }) => {
    group.current!.rotation.y = clock.getElapsedTime();
    group.current!.rotation.x = 0.05*clock.getElapsedTime();
  });

  return (
    //@ts-ignore: Unreachable code error
    <group ref={group} {...props} dispose={null}>
      <mesh geometry={nodes.Plane.geometry} material={planeMaterial} scale={[0.3, 0.3, 0.5]} rotation-x={-Math.PI * 0.5} />
    </group>
  )
}

useGLTF.preload('/build/images/tarot-card.glb')
